2 == 2. , True

!= , not equal
>=,<=

ORDER
**
*,/,//,%
+,-
<,<=,>,>=
==,!=

CONDITIONS

if true_or_not:
    do_this_if_true
    
if the_weather_is_good:
    go_for_a_walk()
elif tickets_are_available:
    go_to_the_theater()
else:
    play_chess_at_home()
    
 else might be omitted

if number1 > number2: larger_number = number1
else: larger_number = number2


TAX calculator
income = float(input("Enter the annual income: "))
if income <= 85528:
    tax = 0.18 * income - 556.02
elif income > 85528:
    tax = 14839.02 + 0.32 * (income-85528)

if tax < 0:
    tax = 0
    
 tax = round(tax, 0)
print("The tax is:", tax, "thalers")
    
    

RECURSION

while conditional_expression:
    instruction_one
    instruction_two
    instruction_three
    :
    :
    instruction_n
    
for i in range(100):  ///range starts from 0
    # do_something()
    pass
    
for i in range(2, 8, 2): //////// 2 is first value, 8 will not be assigned (will stop at 7), 2 is step
    print("The value of i is currently", i)
 
for i in range(1,6):
    print(i , "Mississippi")
    
break - exits the loop immediately, and unconditionally ends the loop's operation; the program begins to execute the nearest instruction after the loop's body;
continue - behaves as if the program has suddenly reached the end of the body; the next turn is started and the condition expression is tested immediately.

print("\nThe continue instruction:")
for i in range(1, 6):
    if i == 3:
        continue
    print("Inside the loop.", i)
print("Outside the loop.")


PROGRAM TO USE CONTINUE,REMOVE VOWELS FROM WORDS
user_word=(input("Please provide a word: \n"))
user_word = user_word.upper()

for letter in user_word:
    # Complete the body of the for loop.
    if letter == 'A' or letter == 'E' or letter == 'I' or letter == 'O' or letter == 'U' :
        continue
    print (letter)


As you may have suspected, loops may have the else branch too, like ifs.
The loop's else branch is always executed once, regardless of whether the loop has entered its body or not.

GIVEN A NUMBER, calculate height of pyramid where each layer has +1 brick than below
blocks = int(input("Enter the number of blocks: "))
height=0
while (blocks > 0):
    if (blocks>=height+1):
        height+=1
        blocks-=height
    else:
        break
print("The height of the pyramid:", height)


BOOLEAN 
and,or,not
